{
	// Place your Data Structure and Algorithm workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"code": {
		"prefix": "L", 
		"body": [
			"#include <algorithm>",
			"#include <functional>",
			"// #include <iomanip>",
			"#include <iostream>",
			"#include <map>",
			"#include <numeric>",
			"#include <queue>",
			"#include <set>",
			"#include <sstream>",
			"#include <stack>",
			"#include <string>",
			"#include <unordered_map>",
			"#include <unordered_set>",
			"#include <vector>",
			"",
			"using namespace std;",
			"",
			"void solve() {",
			"    ",
			"}",
			"",
			"int main() {",
			"#ifndef ONLINE_JUDGE",
    		"    freopen(\"input.txt\", \"r\", stdin);",
			"    freopen(\"output.txt\", \"w\", stdout);",
			"#endif",
			"    cin.tie(0);",
    		"    ios::sync_with_stdio(0);",
			"    // cout << setprecision(10) << fixed;",
    		"    int t = 1;",
    		"    // cin >> t;",
    		"    while (t--) {",
        	"        solve();",
   		 	"    }",
    		"    return 0;",
			"}"
		]
	}
}